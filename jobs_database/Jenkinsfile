pipeline {
    agent any
    parameters {
        string(defaultValue: '', description: 'Nombre del usuario a crear', name: 'USUARIO', trim: true)
        string(defaultValue: '', description: 'ContraseÃ±a nueva del usuario a crear', name: 'PASSWORD', trim: true)
        choice(choices: ['Lectura', 'Admin', 'Desarrollador'], description: '', name: 'TIPOUSUARIO')
        extendedChoice(
            description: '', 
            multiSelectDelimiter: ',', 
            name: 'DATABASE', 
            quoteValue: false, 
            saveJSONParameterToFile: false, 
            type: 'PT_CHECKBOX', 
            value: 'datatest,otroejemplo', 
            visibleItemCount: 10
        )
        string(defaultValue: '3306', description: 'Puerto de MySQL', name: 'PUERTO', trim: true)
    }
    environment {
        ADMINPERMISO = "SHOW DATABASES,INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER"
        DESARROLLADOR = "INSERT, UPDATE, DELETE, CREATE, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, CREATE ROUTINE, ALTER ROUTINE, TRIGGER"
        PERMISO = "SELECT, SHOW VIEW"
        SUFIJOHOST = "192.168.0.14"
    }
    stages {
        stage('Verificar MySQL') {
            steps {
                sh 'which mysql || echo "MySQL no encontrado en PATH"'
            }
        }
        stage('Creando Usuario') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'mysql', passwordVariable: 'PASSWD_DB', usernameVariable: 'USER_DB')]) {
                    script {
                        def tipousuario = "${params.TIPOUSUARIO}"
                        def databases = "${params.DATABASE}".split(",")
                        if (databases.size() > 0) {
                            if (tipousuario == "Admin") {
                                env.PERMISO = env.PERMISO + "," + env.ADMINPERMISO
                            }
                            if (tipousuario == "Desarrollador") {
                                env.PERMISO = env.PERMISO + "," + env.DESARROLLADOR
                            }
                            
                            for (int i = 0; i < databases.size(); ++i) {
                                // Usar script con variables de entorno seguras
                                writeFile file: 'create_user.sh', text: """
                                #!/bin/bash
                                mysql -u\$USER_DB -p\$PASSWD_DB -h ${databases[i]}.${env.SUFIJOHOST} -P ${params.PUERTO} -e "CREATE USER IF NOT EXISTS '${params.USUARIO}'@'%' IDENTIFIED BY '${params.PASSWORD}';"
                                mysql -u\$USER_DB -p\$PASSWD_DB -h ${databases[i]}.${env.SUFIJOHOST} -P ${params.PUERTO} -e "GRANT ${env.PERMISO} ON *.* TO '${params.USUARIO}'@'%';"
                                """
                                sh 'chmod +x create_user.sh'
                                sh './create_user.sh'
                                sh 'rm create_user.sh'
                            }
                        }
                    }
                }
            }
        }
    }
}
